//宣告一個摩斯密碼的字元陣列，其中0代表滴，1代表答
char *morse[]={"01","1000","1010","100",//A~D
              "0","0010","110","0000",//E~H
              "00","0111","101","0100",//I~L
              "11","10","111","0110",//M~P
              "1101","010","000","1",//Q~T
              "001","0001","11","1001",//U~X
              "1011","1100"};//Y~Z
const byte Buzzer=10;//蜂鳴器接腳D10
char chr,index;
char *ptr;
void setup(){
  pinMode(Buzzer,OUTPUT);
  Serial.begin(9600);
}
void loop(){
  //判斷序列阜緩衝區有無資料
  if(Serial.available()){
    chr=Serial.read();//讀取有效的字元資料
    Serial.println(chr);//在moniter中顯示訊息
    if((chr-'A')>=0 && (chr-'z')<=0){ //判斷讀入字元是否介於A~Z
      index=chr-'A'; //計算讀入字元在摩斯密碼列中的位置
      ptr=morse[index];  //取得摩斯密碼陣列中的符號
      while(*ptr!='\0'){ //若不是字元結尾符號
        if(*ptr=='0'){  //若是0(代表滴，短音)
          tone(Buzzzer,440,100);//發出頻率440 維持100ms
          delay(100);
        }
        else{  //若是1(代表答，長音)
          tone(Buzzer,440,300);
          delay(300);
        }
        ptr++;//字元指標加1
        delay(100);//短音與長音的間隔為1個短音的長度
      }
      delay(300);//字元與字元間間隔為3個短音的長度
    }
  }
}
